{{- if .Values.dbJob.enabled }}
{{- $nodeSelector := .Values.dbJob.nodeSelector }}
{{- $affinity := .Values.dbJob.affinity }}
{{- $tolerations := .Values.dbJob.tolerations }}
{{- $securityContext := include "podSecurityContext" (list . .Values.dbJob) }}
{{- $containerSecurityContext := include "containerSecurityContext" (list . .Values.dbJob) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "qmig.dbJob.fullname" . }}
  labels:
    {{- include "qmig.dbJob.labels" . | nindent 4 }}
  {{- $annotations := dict }}
  {{- if .Values.dbJob.useHelmHooks }}
    {{- $_ := set $annotations "helm.sh/hook" "post-install,post-upgrade" }}
    {{- $_ := set $annotations "helm.sh/hook-weight" "3" }}
    {{- $_ := set $annotations "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded" }}
  {{- end }}
  {{- with $annotations := merge $annotations .Values.dbJob.annotations }}
  annotations: {{- $annotations | toYaml | nindent 4 }}
  {{- end }}
spec:
  {{- if not (kindIs "invalid" .Values.dbJob.ttlSecondsAfterFinished) }}
  ttlSecondsAfterFinished: {{ .Values.dbJob.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "qmig.dbJob.labels" . | nindent 8 }}
      {{- if .Values.dbJob.podAnnotations }}
      annotations:
        {{- toYaml .Values.dbJob.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "qmig.serviceAccount" . }}
      securityContext: {{ $securityContext | nindent 8 }}
      restartPolicy: OnFailure
      nodeSelector: {{- toYaml $nodeSelector | nindent 8 }}
      affinity: {{- toYaml $affinity | nindent 8 }}
      tolerations: {{- toYaml $tolerations | nindent 8 }}
      {{- include "qmig.dockerauthList" (list . .Values.dbJob) | indent 6 }}
      {{- if .Values.dbJob.waitForProjectDB.enabled }}
      initContainers:
        - name: wait-for-db
          resources: {{- toYaml .Values.dbJob.waitForProjectDB.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.dbJob.waitForProjectDB.image.pullPolicy }}
          image: {{ template "qmig.dbJob.waitForProjectDB.image" . }}
          args: {{- include "qmig.dbJob.waitForProjectDB.wait-for-db-command" . | indent 10 }}
    {{- end }}
      containers:
        - name: db-job
          imagePullPolicy: {{ .Values.dbJob.image.pullPolicy }}
          image: {{ template "qmig.dbJob.image" . }}
          securityContext: {{ $containerSecurityContext | nindent 12 }}
          {{- if .Values.dbJob.command }}
          command: {{ tpl (toYaml .Values.dbJob.command) . | nindent 10 }}
          {{- else }}
          command: {{- include "qmig.dbJob.dbjob_command" . | indent 10 }}
          {{- end }}
          {{- if .Values.dbJob.args }}
          args: {{ tpl (toYaml .Values.dbJob.args) . | nindent 12 }}
          {{- end }}
          env: {{- include "qmig.dbJob.env" . | nindent 12 }}
          resources: {{- toYaml .Values.dbJob.resources | nindent 12 }}
{{- end }}